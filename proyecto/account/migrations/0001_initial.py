# Generated by Django 4.2.3 on 2023-11-03 06:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False, verbose_name='is_admin')),
                ('is_customer', models.BooleanField(default=False, verbose_name='is_customer')),
                ('is_employee', models.BooleanField(default=False, verbose_name='is_employee')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cuidador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=200)),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
                ('telefono', models.CharField(max_length=15)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mascota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('especie', models.CharField(choices=[('Perro', 'Perro'), ('Gato', 'Gato'), ('Pez', 'Pez'), ('P치jaro', 'P치jaro'), ('Conejo', 'Conejo'), ('Hamster', 'Hamster'), ('Cobaya', 'Cobaya'), ('Reptil', 'Reptil'), ('Conejillo de Indias', 'Conejillo de Indias'), ('Hur칩n', 'Hur칩n'), ('Otro', 'Otro')], max_length=100)),
                ('genero', models.CharField(choices=[('Macho', 'Macho'), ('Hembra', 'Hembra')], max_length=10)),
                ('raza', models.CharField(max_length=100)),
                ('edad', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Propietario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('direccion', models.CharField(max_length=200)),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
                ('telefono', models.CharField(max_length=15)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TipoDeCuidado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SolicitudDeCuidado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_solicitud', models.DateField()),
                ('fecha_inicio', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('hora_fin', models.TimeField()),
                ('ubicacion_servicio', models.CharField(blank=True, max_length=200, null=True)),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
                ('descripcion', models.TextField()),
                ('estado', models.CharField(max_length=20)),
                ('cuidadores_aceptan', models.ManyToManyField(related_name='solicitudes_aceptadas', to='account.cuidador')),
                ('mascotas', models.ManyToManyField(related_name='solicitudes_de_alojamiento', to='account.mascota')),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.propietario')),
                ('tipo_de_cuidado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.tipodecuidado')),
            ],
        ),
        migrations.CreateModel(
            name='MascotaSolicitud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mascota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.mascota')),
                ('solicitud_de_cuidado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.solicituddecuidado')),
            ],
        ),
        migrations.AddField(
            model_name='mascota',
            name='propietario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.propietario'),
        ),
        migrations.CreateModel(
            name='Conversacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.TextField()),
                ('fecha_y_hora', models.DateTimeField(auto_now_add=True)),
                ('cuidador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.cuidador')),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.propietario')),
                ('solicitud_de_cuidado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.solicituddecuidado')),
            ],
        ),
    ]
